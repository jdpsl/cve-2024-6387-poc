#!/bin/bash

# Step 1: Compile the simple C program
cat <<EOF > inspect_memory.c
#include <stdio.h>
#include <unistd.h>

int main() {
    printf("Process ID: %d\n", getpid());
    printf("Press Enter to continue...\n");
    getchar();  // Pause to allow you to inspect the memory layout
    return 0;
}
EOF

gcc inspect_memory.c -o inspect_memory

# Step 2: Run the compiled program in the background
./inspect_memory &

# Get the PID of the running process
pid=$!

# Give some time for the program to start and print the PID
sleep 1

# Step 3: Extract the base addresses for libc from the /proc/<pid>/maps file
glibc_bases=$(grep libc- /proc/$pid/maps | awk '{print $1}')

# Print the base addresses
echo "GLIBC Base Addresses:"
for base in $glibc_bases; do
    echo "0x$base"
done

# Step 4: Kill the inspect_memory process
kill $pid

# Clean up
rm inspect_memory inspect_memory.c
